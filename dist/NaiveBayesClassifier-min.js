!function(e,r){"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?module.exports=r():e.NaiveBayesClassifier=r()}(this,function(){"use strict";var e=function(r){this.VERSION=e.VERSION;var o=function(e){var r=new RegExp(/[^\w\s]/g),o=e.replace(r," ").toLowerCase();return o.split(/\s+/)};if(this.options={},r){if("object"!=typeof r||Array.isArray(r))throw new TypeError("NaiveBayesClassifier got invalid `options`: `"+r+"`. Please pass in an object.");this.options=r}this.tokenizer=this.options.tokenizer||o,this.vocabulary={},this.vocabularySize=0,this.categories={},this.docFrequencyCount={},this.totalNumberOfDocuments=0,this.wordFrequencyCount={},this.wordCount={}};return e.VERSION="0.2.0",e.withClassifier=function(r){var o="The classifier provided is not of the correct type or has been corrupted.";if("object"!=typeof r||Array.isArray(r))throw new TypeError(o);var t=new e(r.options);if("object"!=typeof r.vocabulary||Array.isArray(r.vocabulary))throw new TypeError(o+" Please check `classifier.vocabulary`:"+r.vocabulary);if(Object.keys(r.vocabulary).forEach(function(e){t.addWordToVocabulary(e)}),"object"!=typeof r.categories||Array.isArray(r.categories))throw new TypeError(o+" Please check `classifier.categories`:"+r.categories);if(Object.keys(r.categories).forEach(function(e){t.getOrCreateCategory(e)}),"object"!=typeof r.docFrequencyCount||Array.isArray(r.docFrequencyCount))throw new TypeError(o+" Please check `classifier.docFrequencyCount`:"+r.docFrequencyCount);if(t.docFrequencyCount=r.docFrequencyCount,"number"!=typeof r.totalNumberOfDocuments||r.totalNumberOfDocuments<0)throw new TypeError(o+" Please check `classifier.totalNumberOfDocuments`:"+r.totalNumberOfDocuments);if(t.totalNumberOfDocuments=r.totalNumberOfDocuments,"object"!=typeof r.wordFrequencyCount||Array.isArray(r.wordFrequencyCount))throw new TypeError(o+" Please check `classifier.wordFrequencyCount`:"+r.wordFrequencyCount);if(t.wordFrequencyCount=r.wordFrequencyCount,"object"!=typeof r.wordCount||Array.isArray(r.wordCount))throw new TypeError(o+" Please check `classifier.wordCount`:"+r.wordCount);if(t.wordCount=r.wordCount,"number"!=typeof parseFloat(r.VERSION)||"number"!=typeof parseFloat(e.VERSION)||parseFloat(r.VERSION)!==parseFloat(e.VERSION))throw new Error("The classifier provided has a (major.minor) version number:"+r.VERSION+" that is different to the library's current version number:"+e.VERSION);return t},e.prototype.addWordToVocabulary=function(e){this.vocabulary[e]||(this.vocabulary[e]=!0,this.vocabularySize+=1)},e.prototype.getOrCreateCategory=function(e){if(!e||"string"!=typeof e)throw new TypeError("Category creator got invalid category name: `"+e+"`. Please pass in a String.");return this.categories[e]||(this.docFrequencyCount[e]=0,this.wordFrequencyCount[e]={},this.wordCount[e]=0,this.categories[e]=!0),this.categories[e]?e:void 0},e.prototype.frequencyTable=function(e){var r={};return e.forEach(function(e){r[e]?r[e]+=1:r[e]=1}),r},e.prototype.learn=function(e,r){var o=this;r=o.getOrCreateCategory(r),o.docFrequencyCount[r]+=1,o.totalNumberOfDocuments+=1;var t=o.tokenizer(e),n=o.frequencyTable(t);return Object.keys(n).forEach(function(e){o.addWordToVocabulary(e);var t=n[e];o.wordFrequencyCount[r][e]?o.wordFrequencyCount[r][e]+=t:o.wordFrequencyCount[r][e]=t,o.wordCount[r]+=t}),o},e.prototype.tokenProbability=function(e,r){var o=this.wordFrequencyCount[r][e]||0,t=this.wordCount[r];return(o+1)/(t+this.vocabularySize)},e.prototype.categorize=function(e){var r=this,o=-(1/0),t=0,n={},a={},i=r.tokenizer(e),c=r.frequencyTable(i);return Object.keys(r.categories).forEach(function(e){if(r.categories[e]){var i=r.docFrequencyCount[e]/r.totalNumberOfDocuments,u=Math.log(i);Object.keys(c).forEach(function(o){var t=r.tokenProbability(o,e);u+=Math.log(t)*c[o]}),i=Math.exp(u),t+=i,u>o&&(o=u,n={category:e,probability:i}),a[e]=i}}),Object.keys(a).forEach(function(e){a[e]/=t}),{category:n.category||"unclassified",probability:(n.probability/=t)||-(1/0),categories:a}},e});